---
import ImageMod from "@/components/ImageMod.astro";
import config from "@/config/config.json";
import { getSinglePage } from "@/lib/contentParser.astro";
import {
  getLangFromUrl,
  getTranslations,
  slugSelector,
} from "@/lib/utils/languageParser";
import { markdownify } from "@/lib/utils/textConverter";
import { type ContentEntryMap } from "astro:content";
import CallToAction from "./CallToAction.astro";

const lang = getLangFromUrl(Astro.url);
const menu = await getTranslations(lang as keyof ContentEntryMap);
let footer: any = [];
if (menu) {
  footer = menu.footer;
}

const { copyright } = config.params;

const call_to_action = await getSinglePage(
  "callToActionSection",
  lang as keyof ContentEntryMap,
  "call-to-action"
);
---

<footer class="bg-light">
  <div class="cta p-8">
    <CallToAction call_to_action={call_to_action[0].data} />
  </div>
  <div class="container pt-16 pb-12">
    <div class="row justify-center xl:justify-between mb-16">
      <div class="col-12 xl:col-3" data-aos="fade-up-sm">
        <div data-aos="zoom-in-sm">
          <ImageMod
            src="/images/logo.svg"
            class="mb-6 max-xl:mx-auto"
            width={131}
            height={36}
            alt="Footer log"
            format="svg"
          />
        </div>
        <p
          class="mb-14 xl:mb-0 text-center text-balance sm:w-4/5 lg:w-1/2 sm:mx-auto xl:text-left xl:w-full xl:text-wrap"
          data-aos="fade-up-sm"
        >
          Learn to grow your wealth with powerful analytics, customized
          insights, and streamlined financial planning.
        </p>
      </div>
      <div class="col-12 lg:col-8 overflow-hidden">
        <div
          class="flex flex-wrap justify-center lg:justify-between mb-4 lg:mb-8"
        >
          {
            menu.footer.map(
              (menu: { title: unknown; children: any[] }, index: number) => (
                <div
                  class="w-1/2 md:w-1/6 max-md:mb-10"
                  data-aos="fade-up-sm"
                  data-aos-delay={50 + index * 100}
                >
                  <p class="mb-4 font-semibold text-text-gray text-sm max-lg:text-center">
                    {menu.title}
                  </p>
                  <ul>
                    {menu.children.map(
                      (child: {
                        url: string | URL | null | undefined;
                        name: unknown;
                      }) => (
                        <li class="mb-3 last:mb-0 text-text font-semibold hover:text-secondary max-lg:text-center">
                          {/* @ts-ignore */}
                          <a href={slugSelector(child?.url, lang)}>
                            {child.name}
                          </a>
                        </li>
                      )
                    )}
                  </ul>
                </div>
              )
            )
          }
        </div>
      </div>
    </div>
    <p
      class="copyright text-center font-medium pt-8 border-t border-border/5"
      set:html={markdownify(copyright)}
    />
  </div>
</footer>

<style>
  .copyright {
    a {
      @apply underline;
    }
  }
</style>

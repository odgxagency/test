---
import ImageMod from "../ImageMod.astro";

const { points } = Astro.props;
---

<div class="w-full xl:w-[48%]">
  {
    points.map((f: any, i: number) => (
      <div data-tab-trigger={i}>
        <div
          class="flex flex-col sm:flex-row items-start"
          data-aos="fade-left-sm"
          data-aos-delay={i * 100}
        >
          <div
            class={`px-9 py-6 border-l-[3px] cursor-pointer transition-colors duration-300`}
            data-card-content
          >
            <p
              class="pb-3 font-medium text-xl transition-colors duration-300"
              data-title
              set:html={f.title}
            />
            <p
              set:html={f.content}
              class="text-lg transition-colors duration-300"
              data-description
            />
          </div>
        </div>
      </div>
    ))
  }
</div>

<div
  class="w-full xl:w-[48%] h-[300px] md:h-[630px]"
  data-aos="fade-left-sm"
  data-aos-delay="200"
>
  <div class="relative rounded-[2rem] overflow-hidden bg-light w-full h-full">
    <img
      src="/images/card-pattern-1.png"
      alt="pattern"
      class="absolute bottom-0 right-0 scale-x-[-1] w-1/3"
      width={0}
      height={0}
    />
    <img
      src="/images/card-pattern-2.png"
      alt="pattern"
      class="absolute top-0 left-[-9%] scale-x-[-1] w-1/3"
      width={0}
      height={0}
    />
    {
      points.map((f: any, i: number) => (
        <div class="h-full" data-tab-content={i}>
          <div
            class:list={[
              "absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 transition-opacity duration-300 w-3/5",
              { "opacity-0 pointer-events-none": i !== 0 },
            ]}
          >
            <ImageMod
              src={f.image}
              width={329}
              height={431}
              alt="reason"
              class="h-1/3 mx-auto shadow rounded-[25px] w-full p-2 border border-[#ffffff4d]"
            />
          </div>
        </div>
      ))
    }
  </div>
</div>

<script>
  function setupTabs() {
    const tabTriggers = document.querySelectorAll("[data-tab-trigger]");
    const tabContents = document.querySelectorAll("[data-tab-content]");

    // Set initial state
    let activeTab = 0;
    updateActiveTab();
    updateCardStyles();

    tabTriggers.forEach((trigger) => {
      trigger.addEventListener("click", () => {
        activeTab = Number(trigger.getAttribute("data-tab-trigger"));
        updateActiveTab();
        updateCardStyles();
      });
    });

    function updateActiveTab() {
      tabContents.forEach((content, index) => {
        const imageContainer = content.querySelector("div");
        if (index === activeTab) {
          imageContainer?.classList.remove("opacity-0", "pointer-events-none");
        } else {
          imageContainer?.classList.add("opacity-0", "pointer-events-none");
        }
      });
    }

    function updateCardStyles() {
      // Reset all cards to default styles
      tabTriggers.forEach((trigger) => {
        const cardContent = trigger.querySelector("[data-card-content]");
        const title = trigger.querySelector("[data-title]");
        const description = trigger.querySelector("[data-description]");

        cardContent?.classList.remove("border-green-600");
        cardContent?.classList.add("border-border");
        cardContent?.classList.remove("bg-light");
        cardContent?.classList.add("bg-body");
        title?.classList.add("text-text/60");
        title?.classList.remove("text-text");
        description?.classList.add("text-text/50");
        description?.classList.remove("text-text/70");
      });

      // Apply active styles to the selected card
      const activeCard = document.querySelector(
        `[data-tab-trigger="${activeTab}"]`
      );
      const activeCardContent = activeCard?.querySelector(
        "[data-card-content]"
      );
      const activeTitle = activeCard?.querySelector("[data-title]");
      const activeDescription = activeCard?.querySelector("[data-description]");

      activeCardContent?.classList.remove("border-border");
      activeCardContent?.classList.add("border-green-600");
      activeCardContent?.classList.remove("bg-body");
      activeCardContent?.classList.add("bg-light");
      activeTitle?.classList.remove("text-text/60");
      activeTitle?.classList.add("text-text");
      activeDescription?.classList.remove("text-text/50");
      activeDescription?.classList.add("text-text/70");
    }
  }

  // Initialize when the DOM is ready
  document.addEventListener("DOMContentLoaded", setupTabs);
</script>

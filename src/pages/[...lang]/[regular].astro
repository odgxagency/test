---
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import dateFormat from "@/lib/utils/dateFormat";
import { supportedLang } from "@/lib/utils/languageParser";
import { humanize } from "@/lib/utils/textConverter";
import { render, type ContentEntryMap } from "astro:content";

export async function getStaticPaths() {
  const paths = await Promise.all(
    supportedLang.map(async (lang) => {
      const pages = await getSinglePage("pages", lang as keyof ContentEntryMap);

      return pages.map((page) => ({
        params: {
          lang: lang || undefined,
          regular: page.id.split("/").pop(),
        },
        props: {
          page,
        },
      }));
    })
  );
  return paths.flat();
}

const { page } = Astro.props;
const { title, meta_title, description, update, image } = page.data;
const { Content } = await render(page);
---

<Base
  title={title}
  meta_title={meta_title}
  description={description}
  image={image}
>
  <section class="section">
    <div class="container">
      <h1
        set:html={humanize(title)}
        class="text-center text-[32px] md:text-[48px] lg:text-[64px]"
        data-aos="fade-up-sm"
      />
      {
        update && (
          <p class="text-center text-lg mt-6" data-aos="fade-up-sm">
            Last Update: {dateFormat(update)}
          </p>
        )
      }
      <div class="mt-16 row justify-center">
        <div class="lg:col-10">
          <div class="content" data-aos="fade-in-sm">
            <Content />
          </div>
        </div>
      </div>
    </div>
  </section>
</Base>
